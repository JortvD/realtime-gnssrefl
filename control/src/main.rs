//! This example test the RP Pico on board LED.
//!
//! It does not work with the RP Pico W board. See `blinky_wifi.rs`.

#![no_std]
#![no_main]

use defmt::*;
use embassy_executor::Spawner;
use embassy_rp::usb::In;
use embassy_time::Instant;
use {defmt_rtt as _, panic_probe as _};

mod math;

// Program metadata for `picotool info`.
// This isn't needed, but it's recomended to have these minimal entries.
#[unsafe(link_section = ".bi_entries")]
#[used]
pub static PICOTOOL_ENTRIES: [embassy_rp::binary_info::EntryAddr; 4] = [
    embassy_rp::binary_info::rp_program_name!(c"Blinky Example"),
    embassy_rp::binary_info::rp_program_description!(
        c"This example tests the RP Pico on board LED, connected to gpio 25"
    ),
    embassy_rp::binary_info::rp_cargo_version!(),
    embassy_rp::binary_info::rp_program_build_attribute!(),
];

#[embassy_executor::main]
async fn main(spawner: Spawner) {
    info!("Start of Control");
    // Init peripherals
    let p = embassy_rp::init(Default::default());
    
   let X: [f64; 218] = [1.1667081709439822, 1.1683460444103106, 1.1699737721104984, 1.1715913555154052, 1.1731987960958532, 1.1747960953182708, 1.1763832546490052, 1.1779602755518226, 1.1795271594878898, 1.1810839079182258, 1.1826305222999682, 1.1841670040882095, 1.1856933547372128, 1.1872095756979162, 1.1887156684210058, 1.1902116343531834, 1.1916974749390024, 1.1931731916227015, 1.1946387858432397, 1.1960942590410772, 1.197539612651972, 1.1989748481100524, 1.2003999668465606, 1.2018149702916898, 1.2032198598727084, 1.2046146370145596, 1.2059993031398444, 1.2073738596681816, 1.2087383080180476, 1.2100926496049003, 1.2114368858417808, 1.212771018139295, 1.2140950479055954, 1.2154089765463638, 1.216712805463557, 1.2180065360603343, 1.2192901697330056, 1.2205637078778122, 1.2218271518878203, 1.223080503152285, 1.224323763061579, 1.2255569329991414, 1.2267800143482588, 1.2279930084889599, 1.229195916797999, 1.230388740651312, 1.2315714814196748, 1.2327441404736301, 1.2339067191785313, 1.235059218898232, 1.236201640995071, 1.2373339868261508, 1.2384562577482658, 1.239568455112944, 1.2406705802701394, 1.2417626345682173, 1.2428446193508516, 1.2439165359588642, 1.2449783857320624, 1.2460301700042857, 1.2470718901101843, 1.2477886205973665, 1.24810354737903, 1.248806441975168, 1.2491251431377919, 1.2498144032845886, 1.250136678709886, 1.250812503876553, 1.2511381554170151, 1.251800743101691, 1.2521295745773047, 1.252779120303577, 1.2531109375059046, 1.2537476348266867, 1.25408224551498, 1.2547062860114782, 1.2550434999136961, 1.2556550731956044, 1.2559947020075886, 1.2565939957138983, 1.256935853100405, 1.2575230528983607, 1.257866954492238, 1.2584422440775318, 1.2587880074801334, 1.259351568578319, 1.259699013358076, 1.2602510257241417, 1.2605999734163624, 1.2611406148361477, 1.26149088894344, 1.2620203352301302, 1.262371761224661, 1.2628901862226505, 1.2632425915404204, 1.2637501671242772, 1.2641033811698474, 1.2646002772444807, 1.264954131388326, 1.2654405158891673, 1.2657948434674835, 1.2666255186770317, 1.2674461582835215, 1.2682567635484834, 1.2690573357321158, 1.2698478760901935, 1.2706283858765226, 1.2713988663416986, 1.2740314220896782, 1.2747531477962688, 1.2754649927307131, 1.2761669561557423, 1.276859037330962, 1.277541235514685, 1.2782135499596228, 1.2788759799171743, 1.2795285246349573, 1.2801711833568017, 1.2808039553258057, 1.2814268397775765, 1.282039835948199, 1.2826429430693158, 1.2832361603687321, 1.2838194870734754, 1.2843929224030344, 1.2849564655773293, 1.2855101158117934, 1.2860538723185904, 1.2865877343072214, 1.2871117009814463, 1.2876257715447994, 1.2881299451969004, 1.2886242211322159, 1.2891085985437365, 1.289583076620513, 1.290047654547648, 1.2905023315087454, 1.2909471066816043, 1.29138197924251, 1.2918069483643846, 1.292222013214324, 1.292466909554545, 1.292627172959732, 1.2928671537041867, 1.2930224267615578, 1.293257413568145, 1.2934077737792025, 1.2936376902649867, 1.293783213168671, 1.2940079849104056, 1.2941487440807224, 1.2943682986166019, 1.2945043656639343, 1.294718632490431, 1.2948500770646976, 1.2950589876377105, 1.2951858774235254, 1.2953893651576756, 1.2955117658799598, 1.295709766149745, 1.2958277415676531, 1.2960201917067498, 1.296133803618662, 1.2963206429204672, 1.2964299511603712, 1.2966111208766948, 1.2967161833185583, 1.2968916266595563, 1.2969924992137039, 1.2971621613490345, 1.2972588979628292, 1.2974227260215871, 1.2975153786807199, 1.2976733217495273, 1.2977619404780778, 1.2979139496034826, 1.2979985824615174, 1.2981446106474699, 1.298225303736632, 1.298365305946278, 1.2984421034012315, 1.2985760365568504, 1.298776803534437, 1.2989676079319763, 1.2991484507964035, 1.299319333172955, 1.2994802561027052, 1.299534496768348, 1.2996312206231828, 1.2996818196814321, 1.2997722277683676, 1.2998192136615188, 1.2999032785680764, 1.2999466777773578, 1.3000243740498052, 1.3000642110941807, 1.300135515237501, 1.300171812673082, 1.300236703149714, 1.300269481572861, 1.300327938803289, 1.3003572168481754, 1.3004092232102886, 1.3004350175507684, 1.3004805573810703, 1.300502882727006, 1.3005419423199793, 1.3005608114215648, 1.3005933790296547, 1.3006088026743556, 1.3006348685091846, 1.3006468555229804, 1.3006664117516475, 1.3006749690015003, 1.3006880097496467, 1.3006931421385917, 1.3006996634916208, 1.3007013739612312];
    let Y: [f64; 218] = [7.0, 4.0, 3.0, 4.0, 5.0, 5.0, 6.0, 7.0, 5.0, 6.0, 6.0, 8.0, 7.0, 7.0, 8.0, 6.0, 8.0, 8.0, 8.0, 8.0, 6.0, 7.0, 8.0, 6.0, 7.0, 9.0, 11.0, 9.0, 9.0, 10.0, 11.0, 11.0, 11.0, 11.0, 11.0, 9.0, 12.0, 12.0, 11.0, 11.0, 11.0, 11.0, 12.0, 12.0, 12.0, 12.0, 11.0, 15.0, 15.0, 15.0, 15.0, 16.0, 16.0, 16.0, 16.0, 16.0, 15.0, 15.0, 16.0, 17.0, 17.0, 10.0, 17.0, 9.0, 17.0, 8.0, 17.0, 7.0, 17.0, 6.0, 18.0, 5.0, 18.0, 5.0, 18.0, 5.0, 18.0, 5.0, 18.0, 5.0, 18.0, 6.0, 18.0, 6.0, 18.0, 6.0, 18.0, 6.0, 18.0, 6.0, 18.0, 6.0, 18.0, 6.0, 17.0, 6.0, 17.0, 5.0, 17.0, 6.0, 17.0, 17.0, 16.0, 16.0, 16.0, 16.0, 16.0, 17.0, 16.0, 16.0, 16.0, 16.0, 15.0, 11.0, 14.0, 14.0, 14.0, 14.0, 14.0, 16.0, 15.0, 15.0, 14.0, 13.0, 15.0, 15.0, 16.0, 16.0, 16.0, 16.0, 16.0, 15.0, 16.0, 15.0, 17.0, 17.0, 18.0, 18.0, 17.0, 17.0, 16.0, 6.0, 17.0, 8.0, 16.0, 7.0, 16.0, 6.0, 13.0, 8.0, 14.0, 8.0, 14.0, 8.0, 15.0, 8.0, 14.0, 6.0, 15.0, 8.0, 16.0, 6.0, 17.0, 8.0, 14.0, 5.0, 16.0, 7.0, 15.0, 8.0, 15.0, 7.0, 15.0, 9.0, 15.0, 9.0, 16.0, 7.0, 16.0, 9.0, 15.0, 8.0, 7.0, 7.0, 9.0, 7.0, 9.0, 5.0, 8.0, 7.0, 6.0, 8.0, 8.0, 8.0, 8.0, 7.0, 6.0, 10.0, 5.0, 9.0, 7.0, 10.0, 6.0, 10.0, 8.0, 11.0, 7.0, 11.0, 6.0, 11.0, 8.0, 11.0, 9.0, 11.0, 10.0, 11.0, 11.0, 12.0];
    let STEPS: [f64; 500] = [5.0, 5.05, 5.1, 5.1499999999999995, 5.199999999999999, 5.249999999999999, 5.299999999999999, 5.349999999999999, 5.399999999999999, 5.449999999999998, 5.499999999999998, 5.549999999999998, 5.599999999999998, 5.649999999999998, 5.6999999999999975, 5.749999999999997, 5.799999999999997, 5.849999999999997, 5.899999999999997, 5.949999999999997, 5.9999999999999964, 6.049999999999996, 6.099999999999996, 6.149999999999996, 6.199999999999996, 6.249999999999996, 6.299999999999995, 6.349999999999995, 6.399999999999995, 6.449999999999995, 6.499999999999995, 6.5499999999999945, 6.599999999999994, 6.649999999999994, 6.699999999999994, 6.749999999999994, 6.799999999999994, 6.849999999999993, 6.899999999999993, 6.949999999999993, 6.999999999999993, 7.049999999999993, 7.0999999999999925, 7.149999999999992, 7.199999999999992, 7.249999999999992, 7.299999999999992, 7.349999999999992, 7.3999999999999915, 7.449999999999991, 7.499999999999991, 7.549999999999991, 7.599999999999991, 7.649999999999991, 7.69999999999999, 7.74999999999999, 7.79999999999999, 7.84999999999999, 7.89999999999999, 7.9499999999999895, 7.999999999999989, 8.04999999999999, 8.09999999999999, 8.149999999999991, 8.199999999999992, 8.249999999999993, 8.299999999999994, 8.349999999999994, 8.399999999999995, 8.449999999999996, 8.499999999999996, 8.549999999999997, 8.599999999999998, 8.649999999999999, 8.7, 8.75, 8.8, 8.850000000000001, 8.900000000000002, 8.950000000000003, 9.000000000000004, 9.050000000000004, 9.100000000000005, 9.150000000000006, 9.200000000000006, 9.250000000000007, 9.300000000000008, 9.350000000000009, 9.40000000000001, 9.45000000000001, 9.50000000000001, 9.550000000000011, 9.600000000000012, 9.650000000000013, 9.700000000000014, 9.750000000000014, 9.800000000000015, 9.850000000000016, 9.900000000000016, 9.950000000000017, 10.000000000000018, 10.050000000000018, 10.10000000000002, 10.15000000000002, 10.20000000000002, 10.250000000000021, 10.300000000000022, 10.350000000000023, 10.400000000000023, 10.450000000000024, 10.500000000000025, 10.550000000000026, 10.600000000000026, 10.650000000000027, 10.700000000000028, 10.750000000000028, 10.80000000000003, 10.85000000000003, 10.90000000000003, 10.950000000000031, 11.000000000000032, 11.050000000000033, 11.100000000000033, 11.150000000000034, 11.200000000000035, 11.250000000000036, 11.300000000000036, 11.350000000000037, 11.400000000000038, 11.450000000000038, 11.500000000000039, 11.55000000000004, 11.60000000000004, 11.650000000000041, 11.700000000000042, 11.750000000000043, 11.800000000000043, 11.850000000000044, 11.900000000000045, 11.950000000000045, 12.000000000000046, 12.050000000000047, 12.100000000000048, 12.150000000000048, 12.200000000000049, 12.25000000000005, 12.30000000000005, 12.350000000000051, 12.400000000000052, 12.450000000000053, 12.500000000000053, 12.550000000000054, 12.600000000000055, 12.650000000000055, 12.700000000000056, 12.750000000000057, 12.800000000000058, 12.850000000000058, 12.900000000000059, 12.95000000000006, 13.00000000000006, 13.050000000000061, 13.100000000000062, 13.150000000000063, 13.200000000000063, 13.250000000000064, 13.300000000000065, 13.350000000000065, 13.400000000000066, 13.450000000000067, 13.500000000000068, 13.550000000000068, 13.600000000000069, 13.65000000000007, 13.70000000000007, 13.750000000000071, 13.800000000000072, 13.850000000000072, 13.900000000000073, 13.950000000000074, 14.000000000000075, 14.050000000000075, 14.100000000000076, 14.150000000000077, 14.200000000000077, 14.250000000000078, 14.300000000000079, 14.35000000000008, 14.40000000000008, 14.450000000000081, 14.500000000000082, 14.550000000000082, 14.600000000000083, 14.650000000000084, 14.700000000000085, 14.750000000000085, 14.800000000000086, 14.850000000000087, 14.900000000000087, 14.950000000000088, 15.000000000000089, 15.05000000000009, 15.10000000000009, 15.150000000000091, 15.200000000000092, 15.250000000000092, 15.300000000000093, 15.350000000000094, 15.400000000000095, 15.450000000000095, 15.500000000000096, 15.550000000000097, 15.600000000000097, 15.650000000000098, 15.700000000000099, 15.7500000000001, 15.8000000000001, 15.850000000000101, 15.900000000000102, 15.950000000000102, 16.000000000000103, 16.050000000000104, 16.100000000000104, 16.150000000000105, 16.200000000000106, 16.250000000000107, 16.300000000000107, 16.350000000000108, 16.40000000000011, 16.45000000000011, 16.50000000000011, 16.55000000000011, 16.60000000000011, 16.650000000000112, 16.700000000000113, 16.750000000000114, 16.800000000000114, 16.850000000000115, 16.900000000000116, 16.950000000000117, 17.000000000000117, 17.050000000000118, 17.10000000000012, 17.15000000000012, 17.20000000000012, 17.25000000000012, 17.30000000000012, 17.350000000000122, 17.400000000000123, 17.450000000000124, 17.500000000000124, 17.550000000000125, 17.600000000000126, 17.650000000000126, 17.700000000000127, 17.750000000000128, 17.80000000000013, 17.85000000000013, 17.90000000000013, 17.95000000000013, 18.00000000000013, 18.050000000000132, 18.100000000000133, 18.150000000000134, 18.200000000000134, 18.250000000000135, 18.300000000000136, 18.350000000000136, 18.400000000000137, 18.450000000000138, 18.50000000000014, 18.55000000000014, 18.60000000000014, 18.65000000000014, 18.70000000000014, 18.750000000000142, 18.800000000000143, 18.850000000000144, 18.900000000000144, 18.950000000000145, 19.000000000000146, 19.050000000000146, 19.100000000000147, 19.150000000000148, 19.20000000000015, 19.25000000000015, 19.30000000000015, 19.35000000000015, 19.40000000000015, 19.450000000000152, 19.500000000000153, 19.550000000000153, 19.600000000000154, 19.650000000000155, 19.700000000000156, 19.750000000000156, 19.800000000000157, 19.850000000000158, 19.90000000000016, 19.95000000000016, 20.00000000000016, 20.05000000000016, 20.10000000000016, 20.150000000000162, 20.200000000000163, 20.250000000000163, 20.300000000000164, 20.350000000000165, 20.400000000000166, 20.450000000000166, 20.500000000000167, 20.550000000000168, 20.60000000000017, 20.65000000000017, 20.70000000000017, 20.75000000000017, 20.80000000000017, 20.850000000000172, 20.900000000000173, 20.950000000000173, 21.000000000000174, 21.050000000000175, 21.100000000000176, 21.150000000000176, 21.200000000000177, 21.250000000000178, 21.30000000000018, 21.35000000000018, 21.40000000000018, 21.45000000000018, 21.50000000000018, 21.550000000000182, 21.600000000000183, 21.650000000000183, 21.700000000000184, 21.750000000000185, 21.800000000000185, 21.850000000000186, 21.900000000000187, 21.950000000000188, 22.00000000000019, 22.05000000000019, 22.10000000000019, 22.15000000000019, 22.20000000000019, 22.250000000000192, 22.300000000000193, 22.350000000000193, 22.400000000000194, 22.450000000000195, 22.500000000000195, 22.550000000000196, 22.600000000000197, 22.650000000000198, 22.7000000000002, 22.7500000000002, 22.8000000000002, 22.8500000000002, 22.9000000000002, 22.950000000000202, 23.000000000000203, 23.050000000000203, 23.100000000000204, 23.150000000000205, 23.200000000000205, 23.250000000000206, 23.300000000000207, 23.350000000000207, 23.400000000000208, 23.45000000000021, 23.50000000000021, 23.55000000000021, 23.60000000000021, 23.65000000000021, 23.700000000000212, 23.750000000000213, 23.800000000000214, 23.850000000000215, 23.900000000000215, 23.950000000000216, 24.000000000000217, 24.050000000000217, 24.100000000000218, 24.15000000000022, 24.20000000000022, 24.25000000000022, 24.30000000000022, 24.35000000000022, 24.400000000000222, 24.450000000000223, 24.500000000000224, 24.550000000000225, 24.600000000000225, 24.650000000000226, 24.700000000000227, 24.750000000000227, 24.800000000000228, 24.85000000000023, 24.90000000000023, 24.95000000000023, 25.00000000000023, 25.05000000000023, 25.100000000000232, 25.150000000000233, 25.200000000000234, 25.250000000000234, 25.300000000000235, 25.350000000000236, 25.400000000000237, 25.450000000000237, 25.500000000000238, 25.55000000000024, 25.60000000000024, 25.65000000000024, 25.70000000000024, 25.75000000000024, 25.800000000000242, 25.850000000000243, 25.900000000000244, 25.950000000000244, 26.000000000000245, 26.050000000000246, 26.100000000000247, 26.150000000000247, 26.200000000000248, 26.25000000000025, 26.30000000000025, 26.35000000000025, 26.40000000000025, 26.45000000000025, 26.500000000000252, 26.550000000000253, 26.600000000000254, 26.650000000000254, 26.700000000000255, 26.750000000000256, 26.800000000000257, 26.850000000000257, 26.900000000000258, 26.95000000000026, 27.00000000000026, 27.05000000000026, 27.10000000000026, 27.15000000000026, 27.200000000000262, 27.250000000000263, 27.300000000000264, 27.350000000000264, 27.400000000000265, 27.450000000000266, 27.500000000000266, 27.550000000000267, 27.600000000000268, 27.65000000000027, 27.70000000000027, 27.75000000000027, 27.80000000000027, 27.85000000000027, 27.900000000000272, 27.950000000000273, 28.000000000000274, 28.050000000000274, 28.100000000000275, 28.150000000000276, 28.200000000000276, 28.250000000000277, 28.300000000000278, 28.35000000000028, 28.40000000000028, 28.45000000000028, 28.50000000000028, 28.55000000000028, 28.600000000000282, 28.650000000000283, 28.700000000000284, 28.750000000000284, 28.800000000000285, 28.850000000000286, 28.900000000000286, 28.950000000000287, 29.000000000000288, 29.05000000000029, 29.10000000000029, 29.15000000000029, 29.20000000000029, 29.25000000000029, 29.300000000000292, 29.350000000000293, 29.400000000000293, 29.450000000000294, 29.500000000000295, 29.550000000000296, 29.600000000000296, 29.650000000000297, 29.700000000000298, 29.7500000000003, 29.8000000000003, 29.8500000000003, 29.9000000000003, 29.9500000000003];
    let mut power: [f64; 218] = [0.0; 218];
    let start_time = Instant::now();
    math::lombscargle_no_std(&X, &Y, &STEPS, &mut power);
    for i in 0..218 {
        info!("Power[{}] = {}", i, power[i]);
    }
    let duration = start_time.elapsed();
    info!("Time elapsed in expensive_function() is: {:?} ms", duration.as_millis());
}